#!/usr/bin/env python

import argparse
import os
import numpy as np
from xrs_tools import make_event_file, add_instrument_to_registry
from xrs_tools.instrument import instrument_registry

parser = argparse.ArgumentParser(description='Create a simulated event file.')
parser.add_argument("simput_file", type=str, help='The SIMPUT file to be used as input.')
parser.add_argument("out_file", type=str, help='The name of the event file to be written.')
parser.add_argument("exp_time", type=float, help='The exposure time to use, in seconds.')
parser.add_argument("instrument", type=str, help='The name of the instrument to use, '+
                    'or alternatively the name of a JSON file which contains an instrument '+
                    'specification.')
parser.add_argument("sky_center", type=str, help='The center RA, Dec coordinates of the '+
                    'observation, in degrees, comma-separated')
parser.add_argument("--clobber", action='store_true', 
                    help='Whether or not to clobber an existing file with the same name.')
parser.add_argument("--dither_shape", type=str, default='square',
                    help='The shape of the dither pattern: "square", "circle", or "None". '+
                    'Default: "square"')
parser.add_argument("--dither_size", type=float, default=16.0,
                    help='The size of the dither pattern in arcseconds. For a circle, the'+
                         'size is the radius; for a square, the size is the width. Default: 16.0')
parser.add_argument("--roll_angle", type=float, default=0.0,
                    help='The roll angle in degrees. Default: 0.0')
parser.add_argument("--bkg_scale", type=float, default=1.0,
                    help='The scale value of the background. Default: 1.0')

args = parser.parse_args()

sky_center = np.array(args.sky_center.split(',')).astype("float64")

if args.instrument not in instrument_registry and os.path.exists(args.instrument):
    instrument = add_instrument_to_registry(args.instrument)
else:
    instrument = args.instrument

if args.dither_shape == "None":
    dither_shape = None
else:
    dither_shape = args.dither_shape

make_event_file(args.simput_file, args.out_file, args.exp_time,
                args.instrument, sky_center, dither_size=args.dither_size,
                dither_shape=dither_shape, clobber=args.clobber,
                roll_angle=args.roll_angle, bkg_scale=args.bkg_scale)
